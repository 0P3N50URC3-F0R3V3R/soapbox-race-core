import org.ajoberstar.grgit.Grgit

import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        // Add dependency for build script,
        // so we can access Git from our
        // build script.
        classpath 'org.ajoberstar:grgit:1.1.0'
    }

}

plugins {
    id 'war'
    id 'java'
    id 'idea'
}

repositories {
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // JavaEE
    compile group: 'org.eclipse.persistence', name: 'javax.persistence', version: '2.2.1'
    compile group: 'javax.ejb', name: 'javax.ejb-api', version: '3.2.2'
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
    compile group: 'javax.mail', name: 'javax.mail-api', version: '1.6.2'
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0'
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    // Server
    compile 'org.igniterealtime:rest-api-client:1.1.5'
    compile group: 'io.lettuce', name: 'lettuce-core', version: '5.1.8.RELEASE'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.13'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile group: 'com.google.guava', name: 'guava', version: '28.0-jre'
    compile group: 'com.maxmind.geoip2', name: 'geoip2', version: '2.12.0'

    // Testing
    testCompile 'junit:junit:4.12'
}

ext.genOutputDir = file("$buildDir/generated-resources")

task generatePropInfo {
    ext.outputFile = file("$genOutputDir/project-info.properties")
    outputs.file(outputFile)
    println("Generating project-info.properties")
    doLast {
        def git = Grgit.open(file("."))
        def props = new Properties()
        props.put("branch", git.branch.current.name)
        props.put("commitID", git.head().getAbbreviatedId())
        props.put("longCommitID", git.head().id)
        props.put("time", LocalDateTime.now().format(DateTimeFormatter.ofPattern("MM/dd/yyyy HH:mm:ss")))
        props.store(new FileWriter(outputFile), null)
    }
}

sourceSets.main.output.dir genOutputDir, builtBy: generatePropInfo